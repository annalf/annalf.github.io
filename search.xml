<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>dbm 部署使用</title>
    <url>/2021/05/15/dbm-%E9%83%A8%E7%BD%B2%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<h2><span id="一-基础环境准备">一、基础环境准备</span></h2><p>1、检查源备端adg环境</p>
<p>2、dbm主机操作系统基于CentOS7.9 Linux</p>
<p>2、安装rpm包</p>
<p>​    部署docker rpm下面所有rpm包按照数字顺序记性安装</p>
<h2><span id="二-docker环境准备">二、docker环境准备</span></h2><h3><span id="1-创建目录">1、创建目录</span></h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mkdir /ect/docker</span><br></pre></td></tr></table></figure>

<h3><span id="2-修改docker配置文件daemonjson">2、修改docker配置文件daemon.json</span></h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@dbm dbm]# more  /etc/docker/daemon.json </span><br><span class="line">&#123;</span><br><span class="line">  &quot;oom-score-adjust&quot;: -1000,</span><br><span class="line">  &quot;storage-driver&quot;: &quot;overlay2&quot;,</span><br><span class="line">  &quot;storage-opts&quot;: [&quot;overlay2.override_kernel_check=true&quot;],</span><br><span class="line">  &quot;data-root&quot;: &quot;/dbm/docker&quot;,  </span><br><span class="line">  &quot;insecure-registries&quot;: [&quot;0.0.0.0/0&quot;],  </span><br><span class="line">  &quot;registry-mirrors&quot;: [ &quot;https://eqcxmbvw.mirror.aliyuncs.com&quot;,&quot;https://hub-mirror.c.163.com&quot;],</span><br><span class="line">  &quot;exec-opts&quot;: [&quot;native.cgroupdriver=systemd&quot;],</span><br><span class="line">  &quot;log-driver&quot;: &quot;json-file&quot;,</span><br><span class="line">    &quot;log-opts&quot;: &#123;</span><br><span class="line">        &quot;max-size&quot;: &quot;100m&quot;,</span><br><span class="line">        &quot;max-file&quot;: &quot;5&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">  &quot;max-concurrent-downloads&quot;: 10,</span><br><span class="line">  &quot;max-concurrent-uploads&quot;: 10,</span><br><span class="line">  &quot;bip&quot;: &quot;169.254.123.1/24&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>注：<br>  “data-root”: “/dbm/docker”,   docker文件存放目录</p>
<p>3、拷贝配置文件启动docker服务</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cp daemon.json /ect/docker</span><br><span class="line">systemctl start docker </span><br></pre></td></tr></table></figure>



<h2><span id="三-server端程序部署">三、server端程序部署</span></h2><h3><span id="1-镜像上传">1、镜像上传</span></h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker load -i dbmanager-db.tar</span><br><span class="line">docker load -i dbmanager-server-v1.0.tar</span><br><span class="line">docker load -i dbmanager-ui-v1.0.tar</span><br></pre></td></tr></table></figure>



<h3><span id="2-查看镜像">2、查看镜像</span></h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@dbm docker_images]# docker images</span><br><span class="line">REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE</span><br><span class="line">dbmanager-ui        v1.0                461a2e6a9821        7 days ago          417MB</span><br><span class="line">dbmanager-server    v1.0                ebba457aa9dc        7 days ago          606MB</span><br><span class="line">dbmanager-db        latest              06e972ec86cf        18 months ago       804MB</span><br></pre></td></tr></table></figure>



<h3><span id="3-启动mysql库">3、启动mysql库</span></h3><p>启动mysql库(注意images名称和启动脚本名称,注意mysql放置的位置)</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@dbm docker_images]# more start_db.sh </span><br><span class="line">docker run -d \</span><br><span class="line">--net=host --log-opt max-size=100m --log-opt max-file=5 \</span><br><span class="line">-v /dbm/mysql/mysql33060/data:/var/lib/mysql \</span><br><span class="line">-v /dbm/mysql/mysql33060/log:/var/log/mysql \</span><br><span class="line">-v /dbm/mysql/mysql33060/socket:/var/sock/mysqld \</span><br><span class="line">-e TIMEZONE=Asia/Shanghai \</span><br><span class="line">-e MYSQL_ROOT_PASSWORD=root \</span><br><span class="line">-e MYSQL_GENERAL_LOG=0 \</span><br><span class="line">-e MYSQL_PORT=33060 \</span><br><span class="line">-e MYSQL_SERVER_ID=1 \</span><br><span class="line">-e MYSQL_INNODB_BUFFER_POOL_SIZE=1024M \</span><br><span class="line">--name dbmanager-db --restart=&quot;always&quot; \</span><br><span class="line">dbmanager-db</span><br><span class="line">[root@dbm docker_images]# ./start_db.sh </span><br></pre></td></tr></table></figure>



<h3><span id="4-mysql配置">4、mysql配置</span></h3><p>登录mysql容器bash环境</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker exec -ti bb bash</span><br></pre></td></tr></table></figure>

<p>登录mysql</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysql -uroot -proot</span><br></pre></td></tr></table></figure>

<p>查看版本</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">\s </span><br></pre></td></tr></table></figure>

<p>创建dbmanager库</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">create database dbmanager;</span><br></pre></td></tr></table></figure>

<p>创建用户</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">grant all on dbmanager.* to dbmanager@&#x27;%&#x27; identified by &#x27;dbmanager&#x27;;</span><br></pre></td></tr></table></figure>



<h3><span id="5-导入sql">5、导入sql</span></h3><p>退出主宿主机，登录mysql</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysql -udbmanager -p  -h192.168.168.74 -P33060 -A dbmanager</span><br><span class="line"></span><br><span class="line">source dbm_init.sql</span><br></pre></td></tr></table></figure>



<h3><span id="6-检查配置文件启动服务">6、检查配置文件启动服务</span></h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@dbm docker_images]# vi docker-compose.yml </span><br><span class="line">---</span><br><span class="line">version: &#x27;2&#x27;</span><br><span class="line">services:</span><br><span class="line">  dbmanager-server:</span><br><span class="line">    restart: always</span><br><span class="line">    image: dbmanager-server:v1.0</span><br><span class="line">    hostname: dbmanager-server</span><br><span class="line">    container_name: dbmanager-server</span><br><span class="line">    ports:</span><br><span class="line">      - 8088:8088</span><br><span class="line">    environment:</span><br><span class="line">      TZ: &quot;Asia/Shanghai&quot;</span><br><span class="line">      USERNAME: dbmanager</span><br><span class="line">      PASSWORD: dbmanager</span><br><span class="line">      URL: &quot;jdbc:mysql://192.168.168.74:33060/dbmanager?characterEncoding=utf8&quot;</span><br><span class="line">    volumes:</span><br><span class="line">      - /dbm/server/logs:/app/log</span><br><span class="line"></span><br><span class="line">  dbmanager-ui:</span><br><span class="line">    restart: always</span><br><span class="line">    image: dbmanager-ui:v1.0</span><br><span class="line">    hostname: dbmanager-ui</span><br><span class="line">    container_name: dbmanager-ui</span><br><span class="line">    extra_hosts:</span><br><span class="line">      - dbmanager-server:192.168.168.74</span><br><span class="line">    ports:</span><br><span class="line">      - 80:80</span><br><span class="line">    environment:</span><br><span class="line">      TZ: &quot;Asia/Shanghai&quot;</span><br><span class="line">    depends_on:</span><br><span class="line">      - dbmanager-server</span><br><span class="line">    volumes:</span><br><span class="line">      - /dbm/ui/logs:/usr/local/nginx/logs</span><br></pre></td></tr></table></figure>

<p>启动服务</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker-compose up -d </span><br></pre></td></tr></table></figure>

<p>检查服务</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@dbm docker_images]# docker ps -a</span><br><span class="line">CONTAINER ID        IMAGE                   COMMAND                  CREATED             STATUS              PORTS                    NAMES</span><br><span class="line">44c29e281edb        dbmanager-ui:v1.0       &quot;/app/docker-entrypo…&quot;   46 hours ago        Up 15 minutes       0.0.0.0:80-&gt;80/tcp       dbmanager-ui</span><br><span class="line">2c533d075c8e        dbmanager-server:v1.0   &quot;/app/docker-entrypo…&quot;   46 hours ago        Up 15 minutes       0.0.0.0:8088-&gt;8088/tcp   dbmanager-server</span><br><span class="line">4d70c7a658a9        dbmanager-db            &quot;/docker-entrypoint.…&quot;   46 hours ago        Up 15 minutes                                dbmanager-db</span><br></pre></td></tr></table></figure>

<p>查看信息</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker-compose ps</span><br></pre></td></tr></table></figure>

<p>停止服务</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker-compose stop</span><br></pre></td></tr></table></figure>



<h2><span id="四-agent端程序部署">四、agent端程序部署</span></h2><h3><span id="1-数据库创建用户并授权此时即可进行数据库的监控">1、数据库创建用户并授权（此时即可进行数据库的监控）</span></h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@dbm init_sql]# more oracle_grant.sql </span><br><span class="line">create user dbmon identified by dbmon default tablespace users;</span><br><span class="line">grant select on sys.user$ to dbmon;</span><br><span class="line">grant select on sys.ts$ to dbmon;</span><br><span class="line">grant select on sys.tab$ to dbmon;</span><br><span class="line">grant select on sys.obj$ to dbmon;</span><br><span class="line">grant select on sys.seg$ to dbmon;</span><br><span class="line">grant select on sys.deferred_stg$  to dbmon;</span><br><span class="line">grant select any table to dbmon;</span><br><span class="line">grant select any dictionary to dbmon;</span><br><span class="line">grant connect,resource to dbmon;</span><br></pre></td></tr></table></figure>



<h3><span id="2-部署agent代理用户adg切换等">2、部署agent代理（用户adg切换等）</span></h3><p>拷贝程序及环境</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">scp -rp jdk agent sql 192.168.168.71:/data/</span><br></pre></td></tr></table></figure>

<p>修改文件的属性</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">chown oracle:oinstall /data/jdk -R </span><br><span class="line">chown oracle:oinstall /data/sql -R </span><br><span class="line">chown oracle:oinstall /data/agent -R </span><br></pre></td></tr></table></figure>



<h3><span id="3-登录oracle创建表">3、登录oracle创建表</span></h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sqlplus dbmon/dbmon</span><br><span class="line">@oracle_proc.sql</span><br></pre></td></tr></table></figure>



<h3><span id="4-配置jdk环境变量配置至oracle用户也可以">4、配置jdk环境变量(配置至oracle用户也可以)</span></h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vi /etc/profile</span><br><span class="line"></span><br><span class="line">export JAVA_HOME=/kafka/java/jdk1.8.0_121</span><br><span class="line">export JRE_HOME=$JAVA_HOME/jre;</span><br><span class="line">export JAVA_BIN=$JAVA_HOME/bin</span><br><span class="line">export CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar</span><br><span class="line">export PATH=$JAVA_HOME/bin:$JRE_HOME/bin:$PATH</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">source /etc/profile </span><br></pre></td></tr></table></figure>

<p>检查版本</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">java -version</span><br><span class="line">javac -version</span><br></pre></td></tr></table></figure>



<h3><span id="5-编辑agent脚本">5、编辑agent脚本</span></h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@dbm agent]# vi start.sh </span><br><span class="line">export COMPARE_LICENSE=344af083755a095d1ab9ac5ff6b85afdd30e9d8a</span><br><span class="line">export COMPARE_EXPIRE_DATE=2022-01-01</span><br><span class="line"></span><br><span class="line">export ORACLE_SID=ora11</span><br><span class="line">export ORACLE_HOME=/ora11/app/oracle/product/11.2.0.4/db_1</span><br><span class="line"></span><br><span class="line">export ORA_LOG_PATH=/ora11/app/oracle/diag/rdbms/ora11/ora11/trace</span><br><span class="line"></span><br><span class="line">PORT=9999</span><br><span class="line">RESULT_DIR=/home/oracle11/result2</span><br><span class="line">API_URL=http://172.16.202.32/hors</span><br><span class="line">TIMEOUT=300</span><br><span class="line"></span><br><span class="line">java -Dserver.port=$PORT -Dshell.resultDir=$RESULT_DIR -Dshell.timeout=$TIMEOUT -Dshell.agentType=linux -Dremoteserver.api=$API_URL -jar agent_linux-1.0.jar</span><br></pre></td></tr></table></figure>

<p>注意：<br>    ORACLE_SID       oracle实例名<br>    ORACLE_HOME        oracle家目录<br>    ORA_LOG_PATH    oracle告警日志目录（show parameter back）<br>    PORT            agent端口号<br>    RESULT_DIR        agent 使用目录<br>    API_URL            server界面地址</p>
<h3><span id="6-启动agent">6、启动agent</span></h3><p>前台启动</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">./start.sh</span><br></pre></td></tr></table></figure>

<p>后台启动</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nohup sh start.sh &gt; log.agent 2&gt;&amp;1 &amp; </span><br></pre></td></tr></table></figure>



<h2><span id="五-界面配置">五、界面配置</span></h2><p>登录地址：<a href="http://192.168.168.74/login">http://192.168.168.74/login</a><br>登录认证：admin/123456</p>
<h3><span id="1-添加oralce数据库">1、添加oralce数据库</span></h3><p>需要监控的数据库全部创建用户然后添加进该处</p>
<p><img src="/2021/05/15/dbm-%E9%83%A8%E7%BD%B2%E4%BD%BF%E7%94%A8/image-20210515190200517.png" alt="image-20210515190200517"></p>
<h3><span id="2-添加容灾列表">2、添加容灾列表</span></h3><p>根据上述添加过列表的数据库，配置adg源备端配套关系</p>
<p><img src="/2021/05/15/dbm-%E9%83%A8%E7%BD%B2%E4%BD%BF%E7%94%A8/image-20210515190308215.png" alt="image-20210515190308215"></p>
<h3><span id="3-容灾切换操作">3、容灾切换操作</span></h3><p>可点击日志，查看源备端告警日志（可以查看到内容也确保agent启动无误）</p>
<p><img src="/2021/05/15/dbm-%E9%83%A8%E7%BD%B2%E4%BD%BF%E7%94%A8/image-20210515190527027.png" alt="image-20210515190527027"></p>
<p>点击容灾切换进行切换操作，如果遇到状态长时间未更新，可点击状态更新</p>
<p><img src="/2021/05/15/dbm-%E9%83%A8%E7%BD%B2%E4%BD%BF%E7%94%A8/image-20210515190715689.png" alt="image-20210515190715689"></p>
<h3><span id="4-oracle监控详细内容">4、oracle监控详细内容</span></h3><p>点击oralce列表，再点击标签名称即可查看详细监控信息</p>
<p><img src="/2021/05/15/dbm-%E9%83%A8%E7%BD%B2%E4%BD%BF%E7%94%A8/image-20210515190842925.png" alt="image-20210515190842925"></p>
<h3><span id="5-查看具体内容">5、查看具体内容</span></h3><p><img src="/2021/05/15/dbm-%E9%83%A8%E7%BD%B2%E4%BD%BF%E7%94%A8/image-20210515190924552.png" alt="image-20210515190924552"></p>
]]></content>
      <categories>
        <category>dbm</category>
      </categories>
      <tags>
        <tag>dbm</tag>
      </tags>
  </entry>
  <entry>
    <title>oracle11g+rac+关闭开启归档</title>
    <url>/2021/05/15/oracle11g-rac-%E5%85%B3%E9%97%AD%E5%BC%80%E5%90%AF%E5%BD%92%E6%A1%A3/</url>
    <content><![CDATA[<p>一致性停库</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">srvctl stop database -d node</span><br></pre></td></tr></table></figure>

<p>启动一节点至mount</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">srvctl start instance -d node -i node1 -o mount</span><br></pre></td></tr></table></figure>

<p>关闭归档</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">alter database noarchivelog;</span><br></pre></td></tr></table></figure>

<p>关闭数据库</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">srvctl stop database -d ndoe</span><br></pre></td></tr></table></figure>

<p>启动数据库</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">srvctl start database -d node </span><br></pre></td></tr></table></figure>

<p>查看数据库状态</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">srvctl status database -d node </span><br></pre></td></tr></table></figure>

<p>检查归档</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">archive log list</span><br><span class="line">alter system set log_archive_format=&#x27;node_%t_%s_%r.log&#x27; scope=spfile; </span><br></pre></td></tr></table></figure>

<p>设置归档路径（目录需提前创建好）</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">alter system set log_archive_dest_1=&#x27;location=+data/node/archivelog&#x27; scope=spfile;</span><br></pre></td></tr></table></figure>

<p>关闭数据库</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">srvctl stop database -d ndoe</span><br></pre></td></tr></table></figure>

<p>启动数据库</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">srvctl start database -d node</span><br></pre></td></tr></table></figure>

<p>查看数据库状态</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">srvctl status database -d node</span><br></pre></td></tr></table></figure>

<p>检查归档</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">archive log list</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>oracle</category>
      </categories>
      <tags>
        <tag>oralce</tag>
      </tags>
  </entry>
  <entry>
    <title>win+11g+单机+adg部署</title>
    <url>/2021/05/15/win-11g-%E5%8D%95%E6%9C%BA-adg%E9%83%A8%E7%BD%B2/</url>
    <content><![CDATA[<h3><span id="1-服务器环境介绍及规划">1、服务器环境介绍及规划</span></h3><h3><span id="1-服务器环境">1、服务器环境</span></h3><p>primary:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">IP地址：192.168.168.68</span><br><span class="line">os版本：win server 2008 R2</span><br><span class="line">DB版本：oracle11.2.0.4</span><br><span class="line">oracle_sid：wangxf</span><br><span class="line">db_unique_name：wangxf</span><br></pre></td></tr></table></figure>

<p>standby:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">IP地址：192.168.168.72</span><br><span class="line">os版本：win server 2008 R2</span><br><span class="line">DB版本：oracle11.2.0.4</span><br><span class="line">oracle_sid：wangxf</span><br><span class="line">db_unique_name: wangxfs</span><br></pre></td></tr></table></figure>

<h3><span id="2-主库配置primary">2、主库配置（primary）</span></h3><p>检查日志情况</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT log_mode,</span><br><span class="line">	flashback_on,</span><br><span class="line">	force_logging,</span><br><span class="line">	supplemental_log_data_min min,</span><br><span class="line">	supplemental_log_data_pk pk,</span><br><span class="line">	supplemental_log_data_ui ui,</span><br><span class="line">	supplemental_log_data_fk fk,</span><br><span class="line">	supplemental_log_data_all allc</span><br><span class="line"> FROM v$database;</span><br></pre></td></tr></table></figure>

<p> 归档</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">shutdown immediate</span><br><span class="line">startup mount;</span><br><span class="line">alter database archivelog;</span><br><span class="line">alter system set log_archive_format=&#x27;wangxf_%t_%s_%r.log&#x27; scope=spfile; </span><br><span class="line">alter system set log_archive_dest_1=&#x27;location=D:\app\wangxf\archivelog&#x27; scope=spfile;</span><br><span class="line">alter database open;</span><br></pre></td></tr></table></figure>

<p> force logging</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">alter database force logging;</span><br></pre></td></tr></table></figure>

<p> flashback</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">alter database flashback on;</span><br></pre></td></tr></table></figure>

<h3><span id="3-创建备库日志文件primary">3、创建备库日志文件（primary）</span></h3><p>查看日志组文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SQL&gt; set wrap off</span><br><span class="line">SQL&gt; select * from v$logfile order by group#;</span><br><span class="line">行将被截断</span><br><span class="line">  GROUP# STATUS TYPE  MEMBER</span><br><span class="line">---------- ------- ------- -----------------------------------------------------</span><br><span class="line">     1     ONLINE D:\APP\WANGXF\ORADATA\WANGXF\REDO01.LOG</span><br><span class="line">     2     ONLINE D:\APP\WANGXF\ORADATA\WANGXF\REDO02.LOG</span><br><span class="line">     3     ONLINE D:\APP\WANGXF\ORADATA\WANGXF\REDO03.LOG</span><br><span class="line">SQL&gt; select * from v$log;</span><br><span class="line">行将被截断</span><br><span class="line">行将被截断</span><br><span class="line">行将被截断</span><br><span class="line">行将被截断</span><br><span class="line">  GROUP#  THREAD# SEQUENCE#   BYTES BLOCKSIZE  MEMBERS ARC STATUS</span><br><span class="line">---------- ---------- ---------- ---------- ---------- ---------- --- ----------</span><br><span class="line">     1     1     7  52428800    512     1 NO CURRENT</span><br><span class="line">     2     1     5  52428800    512     1 YES INACTIVE</span><br><span class="line">     3     1     6  52428800    512     1 YES INACTIVE</span><br></pre></td></tr></table></figure>

<p> 创建日志文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">alter database add standby logfile group 4(&#x27;D:\APP\WANGXF\ORADATA\WANGXF\STANDBY04.LOG&#x27;)size 50m;</span><br><span class="line">alter database add standby logfile group 5(&#x27;D:\APP\WANGXF\ORADATA\WANGXF\STANDBY05.LOG&#x27;)size 50m;</span><br><span class="line">alter database add standby logfile group 6(&#x27;D:\APP\WANGXF\ORADATA\WANGXF\STANDBY06.LOG&#x27;)size 50m;</span><br><span class="line">alter database add standby logfile group 7(&#x27;D:\APP\WANGXF\ORADATA\WANGXF\STANDBY07.LOG&#x27;)size 50m;</span><br></pre></td></tr></table></figure>

<h3><span id="4-修改主库系统参数primary">4、修改主库系统参数（primary）</span></h3><p> dg_config 填写的是主备库的 db_unique_name。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">show parameter db_unique_name</span><br><span class="line">alter system set log_archive_config=&#x27;dg_config=(wangxf,wangxfs)&#x27; scope=spfile;</span><br></pre></td></tr></table></figure>

<p>设置归档日志的存放位置：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">alter system set log_archive_dest_1=&#x27;LOCATION=D:\app\wangxf\archivelog valid_for=(all_logfiles,all_roles) db_unique_name=wangxf&#x27; scope=spfile;</span><br><span class="line"></span><br><span class="line">alter system set log_archive_dest_2=&#x27;SERVICE=wangxfs ASYNC VALID_FOR=(ONLINE_LOGFILES,PRIMARY_ROLE) DB_UNIQUE_NAME=wangxfs&#x27; scope=spfile;</span><br></pre></td></tr></table></figure>

<p> 注：第一个 wangxfs 是 tnsname.ora 的连接名，第二个 wangxfs 是 DB_UNIQUE_NAME</p>
<p> 启用设置的日志路径：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">alter system set log_archive_dest_state_1=enable scope=spfile;</span><br><span class="line">alter system set log_archive_dest_state_2=enable scope=spfile;</span><br></pre></td></tr></table></figure>

<p> 启用强制30分钟切换一次日志</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">alter system set archive_lag_target=1800 scope=spfile;</span><br></pre></td></tr></table></figure>

<p> 设置归档日志进程的最大数量（视实际情况调整）：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">alter system set log_archive_max_processes=30 scope=both;</span><br></pre></td></tr></table></figure>

<p>设置 standby 库从哪个数据库获取归档日志（只对 standby 库有效，在主库上设置是为了在故障切换后，主库可以成为备库使用）：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">alter system set fal_server=&#x27;wangxfs&#x27; scope=both;</span><br><span class="line">alter system set fal_client=&#x27;wangxf&#x27; scope=both;</span><br></pre></td></tr></table></figure>

<p> 设置文件管理模式，此项设置为自动，不然在主库创建数据文件后，备库不会自动创建：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">alter system set standby_file_management=auto scope=spfile;</span><br></pre></td></tr></table></figure>

<p>启用 OMF 功能：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">alter system set db_create_file_dest=&#x27;D:\APP\WANGXF\ORADATA&#x27; scope=spfile;</span><br></pre></td></tr></table></figure>

<p>如果主备库文件的存放路径不同，还需要设置以下两个参数（需要重启数据库生效）：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">alter system set db_file_name_convert=&#x27;D:\APP\WANGXFS\ORADATA&#x27;,&#x27;D:\APP\WANGXF\ORADATA&#x27; scope=spfile;</span><br><span class="line">alter system set log_file_name_convert=&#x27;D:\APP\WANGXFS\ORADATA&#x27;,&#x27;D:\APP\WANGXF\ORADATA&#x27; scope=spfile;</span><br></pre></td></tr></table></figure>

<p> 检查重点配置项</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select name, value from v$parameter</span><br><span class="line"> where name in </span><br><span class="line"> (&#x27;db_name&#x27;,</span><br><span class="line">&#x27;db_unique_name&#x27;,</span><br><span class="line">&#x27;log_archive_config&#x27;,</span><br><span class="line">&#x27;log_archive_dest_1&#x27;,</span><br><span class="line">&#x27;log_archive_dest_2&#x27;,</span><br><span class="line">&#x27;log_archive_dest_state_1&#x27;,</span><br><span class="line">&#x27;log_archive_dest_state_2&#x27;,</span><br><span class="line">&#x27;remote_login_passwordfile&#x27;,</span><br><span class="line">&#x27;log_archive_format&#x27;,</span><br><span class="line">&#x27;log_archive_max_processes&#x27;,</span><br><span class="line">&#x27;fal_server&#x27;,</span><br><span class="line">&#x27;db_file_name_convert&#x27;,</span><br><span class="line">&#x27;log_file_name_convert&#x27;,</span><br><span class="line">&#x27;standby_file_management&#x27;)</span><br><span class="line">/</span><br></pre></td></tr></table></figure>

<p> 一些参数需要重启数据库生效（如文件映射等）</p>
<h3><span id="5-生成pfile文件primary">5、生成pfile文件（primary）</span></h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">create pfile=&#x27;D:\soft\init_wangxf.ora&#x27; from spfile;</span><br></pre></td></tr></table></figure>

<h3><span id="6-创建密码文件primary">6、创建密码文件（primary）</span></h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">orapwd file=D:\app\soft\PWDris.ora password=aqa</span><br></pre></td></tr></table></figure>

<h3><span id="7-拷贝pfile文件和密码文件至备端primary">7、拷贝pfile文件和密码文件至备端（primary）</span></h3><h3><span id="8-备库配置网络监听standby">8、备库配置网络监听（standby）</span></h3><p>listener.ora 内容如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">LISTENER =</span><br><span class="line"> (DESCRIPTION_LIST =</span><br><span class="line">  (DESCRIPTION =</span><br><span class="line">   (ADDRESS = (PROTOCOL = TCP)(HOST = 192.168.168.78)(PORT = 1521))</span><br><span class="line">   (ADDRESS = (PROTOCOL = IPC)(KEY = EXTPROC1521))</span><br><span class="line">  )</span><br><span class="line"> )</span><br><span class="line">SID_LIST_LISTENER =</span><br><span class="line"> (SID_LIST =</span><br><span class="line">  (SID_DESC =</span><br><span class="line">   (GLOBAL_DBNAME = wangxf)</span><br><span class="line">   (ORACLE_HOME = D:\app\wangxf\product\11.2.0\dbhome_1)</span><br><span class="line">   (SID_NAME = wangxf)</span><br><span class="line">  )</span><br><span class="line">  )</span><br><span class="line">ADR_BASE_LISTENER = D:\app\wangxf</span><br></pre></td></tr></table></figure>

<p> tnsname.ora 内容如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">WANGXF =</span><br><span class="line"> (DESCRIPTION =</span><br><span class="line">  (ADDRESS = (PROTOCOL = TCP)(HOST = 192.168.168.77)(PORT = 1521))</span><br><span class="line">  (CONNECT_DATA =</span><br><span class="line">   (SERVER = DEDICATED)</span><br><span class="line">   (SERVICE_NAME = wangxf)</span><br><span class="line">  )</span><br><span class="line"> )</span><br><span class="line"></span><br><span class="line">WANGXFS =</span><br><span class="line"> (DESCRIPTION =</span><br><span class="line">  (ADDRESS = (PROTOCOL = TCP)(HOST = 192.168.168.78)(PORT = 1521))</span><br><span class="line">  (CONNECT_DATA =</span><br><span class="line">   (SERVER = DEDICATED)</span><br><span class="line">   (SERVICE_NAME = wangxf)</span><br><span class="line">  )</span><br><span class="line"> )</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>重启一下监听：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">lsnrctl stop</span><br><span class="line">lsnrctl start</span><br></pre></td></tr></table></figure>



<h3><span id="9-主库配置网络监听primary">9、主库配置网络监听（primary）</span></h3><p>listener.ora 内容如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">LISTENER =</span><br><span class="line"> (DESCRIPTION_LIST =</span><br><span class="line">  (DESCRIPTION =</span><br><span class="line">   (ADDRESS = (PROTOCOL = TCP)(HOST = 192.168.168.77)(PORT = 1521))</span><br><span class="line">   (ADDRESS = (PROTOCOL = IPC)(KEY = EXTPROC1521))</span><br><span class="line">  )</span><br><span class="line"> )</span><br><span class="line">SID_LIST_LISTENER =</span><br><span class="line"> (SID_LIST =</span><br><span class="line">  (SID_DESC =</span><br><span class="line">   (GLOBAL_DBNAME = wangxf)</span><br><span class="line">   (ORACLE_HOME = D:\app\wangxf\product\11.2.0\dbhome_1)</span><br><span class="line">   (SID_NAME = wangxf)</span><br><span class="line">  )</span><br><span class="line">  )</span><br><span class="line">ADR_BASE_LISTENER = D:\app\wangxf</span><br></pre></td></tr></table></figure>

<p> tnsname.ora 内容如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">WANGXF =</span><br><span class="line"> (DESCRIPTION =</span><br><span class="line">  (ADDRESS = (PROTOCOL = TCP)(HOST = 192.168.168.77)(PORT = 1521))</span><br><span class="line">  (CONNECT_DATA =</span><br><span class="line">   (SERVER = DEDICATED)</span><br><span class="line">   (SERVICE_NAME = wangxf)</span><br><span class="line">  )</span><br><span class="line"> )</span><br><span class="line"></span><br><span class="line">WANGXFS =</span><br><span class="line"> (DESCRIPTION =</span><br><span class="line">  (ADDRESS = (PROTOCOL = TCP)(HOST = 192.168.168.78)(PORT = 1521))</span><br><span class="line">  (CONNECT_DATA =</span><br><span class="line">   (SERVER = DEDICATED)</span><br><span class="line">   (SERVICE_NAME = wangxf)</span><br><span class="line">  )</span><br><span class="line"> )</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>重启一下监听：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">lsnrctl stop</span><br><span class="line">lsnrctl start</span><br></pre></td></tr></table></figure>

<h3><span id="10-测试联通性如果不通请检查防火墙配置primarystandby">10、测试联通性(如果不通请检查防火墙配置)（primary+standby）</span></h3><p>备库 </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">tnsping wangxf</span><br><span class="line">tnsping wangxfs</span><br></pre></td></tr></table></figure>

<p>主库</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">tnsping wangxf</span><br><span class="line">tnsping wangxfs</span><br></pre></td></tr></table></figure>

<h3><span id="11-修改备库pfile文件主要修改如下信息-standby">11、修改备库pfile文件，主要修改如下信息 （standby）</span></h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">*.db_create_file_dest=&#x27;D:\APP\WANGXFS\ORADATA&#x27;</span><br><span class="line">*.control_files=&#x27;D:\APP\WANGXF\ORADATA\wangxf\control01.ctl&#x27;,&#x27;D:\APP\WANGXF\ORADATA\wangxf\control02.ctl&#x27;</span><br><span class="line">*.db_file_name_convert=&#x27;D:\APP\WANGXF\ORADATA&#x27;,&#x27;D:\APP\WANGXFS\ORADATA&#x27;;</span><br><span class="line">*.log_file_name_convert=&#x27;D:\APP\WANGXF\ORADATA&#x27;,&#x27;D:\APP\WANGXFS\ORADATA&#x27;;</span><br><span class="line">*.db_unique_name=&#x27;wangxfs&#x27;</span><br><span class="line">*.fal_client=&#x27;wangxfs&#x27;</span><br><span class="line">*.fal_server=&#x27;wangxf&#x27;</span><br><span class="line">*.log_archive_dest_1=&#x27;LOCATION=D:\app\wangxfs\archivelog valid_for=(all_logfiles,all_roles) db_unique_name=wangxfs&#x27;</span><br><span class="line">*.log_archive_dest_2=&#x27;SERVICE=wangxf ASYNC VALID_FOR=(ONLINE_LOGFILES,PRIMARY_ROLE) DB_UNIQUE_NAME=wangxf&#x27;</span><br></pre></td></tr></table></figure>

<p> 创建参数文件中涉及到的目录</p>
<h3><span id="12-使用参数文件起库至nomountstandby">12、使用参数文件起库至nomount（standby）</span></h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">startup nomount pfile=&#x27;D:\soft\init_wangxf.ora&#x27;;</span><br><span class="line">create spfile from pfile=&#x27;D:\soft\init_wangxf.ora&#x27;;</span><br><span class="line">shutdown immediate;</span><br><span class="line">startup nomount;</span><br></pre></td></tr></table></figure>

<p>确认 db_unique_name</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">show parameter db_unique_name;</span><br></pre></td></tr></table></figure>

<h3><span id="13-复制数据文件standby">13、复制数据文件（standby）</span></h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">rman target sys/oracle@wangxf auxiliary sys/oracle@wangxfs</span><br></pre></td></tr></table></figure>

<p> 确认我们已经连接上主库和备库</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">connected to target database: DXJCDB (DBID=3999615226)</span><br><span class="line">connected to auxiliary database: DXJCDB (DBID=3999681020)</span><br></pre></td></tr></table></figure>

<p> 执行以下命令：(注意检查目录是否都存在)</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">duplicate target database for standby from active database;</span><br></pre></td></tr></table></figure>

<p> 命令执行完后，可以看到主库在开始复制文件到备库中</p>
<p>注：duplicate target database for standby from active database dorecover nofilenamecheck;如果复制数据库时，备库的路径和原库一致，就需要加 nofilenamecheck，不然会报错。</p>
<h3><span id="14-复制完成后打开standby数据库开启实时同步standby库打开默认只读">14、复制完成后，打开standby数据库开启实时同步(standby库打开默认只读)</span></h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">alter database open; </span><br><span class="line"></span><br><span class="line">alter database recover managed standby database using current logfile disconnect from session;</span><br></pre></td></tr></table></figure>

<p> 关闭日志应用</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ALTER DATABASE RECOVER MANAGED STANDBY DATABASE CANCEL; </span><br></pre></td></tr></table></figure>

<p> 检查当前日志应用</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT PROCESS, STATUS, THREAD#, SEQUENCE#, BLOCK#, BLOCKS FROM V$MANAGED_STANDBY;</span><br></pre></td></tr></table></figure>

<h3><span id="15-状态检查">15、状态检查</span></h3><p>查看主数据库状态</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$sqlplus / as sysdba</span><br><span class="line"></span><br><span class="line">select database_role from v$database;</span><br></pre></td></tr></table></figure>

<p>登录到备库上查看：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$sqlplus / as sysdba</span><br><span class="line"></span><br><span class="line">select database_role from v$database;</span><br></pre></td></tr></table></figure>

<p>检查归档日志是否能正常传输（日志的序号必须是一样的）：</p>
<p>主库</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select SEQUENCE#, FIRST_TIME, NEXT_TIME, APPLIED, ARCHIVED from V$ARCHIVED_LOG;</span><br></pre></td></tr></table></figure>

<p>备库</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select SEQUENCE#, FIRST_TIME, NEXT_TIME, APPLIED, ARCHIVED from V$ARCHIVED_LOG;</span><br></pre></td></tr></table></figure>

<p>b)切换日志测试</p>
<p>主库</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">alter system switch logfile;</span><br><span class="line"></span><br><span class="line">select SEQUENCE#, FIRST_TIME, NEXT_TIME, APPLIED, ARCHIVED from V$ARCHIVED_LOG;</span><br></pre></td></tr></table></figure>

<p>备库</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select SEQUENCE#, FIRST_TIME, NEXT_TIME, APPLIED, ARCHIVED from V$ARCHIVED_LOG;</span><br></pre></td></tr></table></figure>

<h3><span id="16-主备切换switchover">16、主备切换(SWITCHOVER)</span></h3><p> 主库切换为备库</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select open_mode,switchover_status from v$database;</span><br></pre></td></tr></table></figure>

<p>查询结果是 TO STANDBY 或 SESSIONS ACTIVE 表明可以进行切换； </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ALTER DATABASE COMMIT TO SWITCHOVER TO PHYSICAL STANDBY;</span><br><span class="line">shutdown immediate;</span><br><span class="line">startup mount;</span><br><span class="line">select database_role from v$database;</span><br></pre></td></tr></table></figure>

<p> 备库切换为主库</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select open_mode,switchover_status from v$database;</span><br></pre></td></tr></table></figure>

<p> TO PRIMARY 或 SESSIONS ACTIVE 表明可以切换成主库；</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">alter database commit to switchover to primary with session shutdown;</span><br><span class="line">ALTER DATABASE OPEN;</span><br><span class="line">select switchover_status,database_role,open_mode from v$database;</span><br></pre></td></tr></table></figure>

<p> 备库切换为主库后开启日志应用</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">alter database open;</span><br><span class="line">alter database recover managed standby database using current logfile disconnect from session;</span><br></pre></td></tr></table></figure>

<p> 然后检查日志即可</p>
]]></content>
      <categories>
        <category>oracle</category>
      </categories>
      <tags>
        <tag>adg</tag>
      </tags>
  </entry>
  <entry>
    <title>windows10 部署hexo</title>
    <url>/2021/05/15/windows10-%E9%83%A8%E7%BD%B2hexo/</url>
    <content><![CDATA[<h2><span id="一-部署基础程序">一、部署基础程序</span></h2><h3><span id="1-部署nodejs">1、部署node.js</span></h3><p>​    下载地址：<a href="https://nodejs.org/en/download/">https://nodejs.org/en/download/</a><br>​    安装文件：node-v16.1.0-x64.msi<br>​    部署目录：D:\hexo\nodejs<br>​    安装修改下安装目录，其他全部默认即可<br>​    </p>
<h3><span id="2-部署git">2、部署git</span></h3><p>​    下载地址：<a href="https://git-scm.com/downloads">https://git-scm.com/downloads</a><br>​    安装文件：Git-2.31.1-64-bit.exe<br>​    部署目录：D:\hexo\Git<br>​    安装修改下安装目录，其他全部默认即可<br>​    </p>
<h3><span id="3-查看版本校验是否安装成功">3、查看版本校验是否安装成功</span></h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">C:\Users\wangxf&gt;node -v</span><br><span class="line">v16.1.0</span><br><span class="line"></span><br><span class="line">C:\Users\wangxf&gt;npm -v</span><br><span class="line">npm notice</span><br><span class="line">npm notice New minor version of npm available! 7.11.2 -&gt; 7.13.0</span><br><span class="line">npm notice Changelog: https://github.com/npm/cli/releases/tag/v7.13.0</span><br><span class="line">npm notice Run npm install -g npm@7.13.0 to update!</span><br><span class="line">npm notice</span><br><span class="line">7.11.2</span><br><span class="line"></span><br><span class="line">C:\Users\wangxf&gt;git --version</span><br><span class="line">git version 2.31.1.windows.1</span><br><span class="line"></span><br><span class="line">C:\Users\wangxf&gt;node -v</span><br></pre></td></tr></table></figure>

<h2><span id="二-部署hexo">二、部署hexo</span></h2><h3><span id="1-创建目录存放hexo相关文件和博客内容等">1、创建目录存放hexo相关文件和博客内容等</span></h3><p>本地目录：D:\hexo\data</p>
<h3><span id="2-安装hexo微博框架">2、安装hexo微博框架</span></h3><p>在此目录下E:\AppDatas\blog右边空白处右键单击，选择Git Bash here，然后在命令行输入</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>

<p>测试是否安装成功</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo -v</span><br></pre></td></tr></table></figure>

<h3><span id="3-创建博客文件夹">3、创建博客文件夹</span></h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">D:\hexo\data\blog </span><br></pre></td></tr></table></figure>

<h3><span id="4-初始化hexo">4、初始化hexo</span></h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure>

<p>初始化完成后hexo的目录结构：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">├── node_modules：是依赖包</span><br><span class="line">├── public  #存放被解析markdown、html文件</span><br><span class="line">├── scaffolds #当您新建文章时，根据 scaffold生成文件</span><br><span class="line">├── source  #资源文件夹</span><br><span class="line">|   └── _posts #博客文章目录</span><br><span class="line">└── themes #主题</span><br><span class="line">├── _config.yml   #网站的配置信息。标题、网站名称等</span><br><span class="line">├── db.json：#source解析所得到的</span><br><span class="line">├── package.json  # 应用程序的配置信息</span><br></pre></td></tr></table></figure>

<h3><span id="5-启动博客">5、启动博客</span></h3><p>hexo server，这里可以直接用简写为hexo s</p>
<h3><span id="6-登录hexo">6、登录hexo</span></h3><p>浏览器输入地址：<a href="http://localhost:4000/">http://localhost:4000/</a></p>
<h2><span id="三-创建博客">三、创建博客</span></h2><h3><span id="1-停止hexo">1、停止hexo</span></h3><p>ctrl+c 即可</p>
<h3><span id="2-创建文章">2、创建文章</span></h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wangxf@wangxf MINGW64 /d/hexo/data/blog</span><br><span class="line">$ hexo n &quot;windows10 部署hexo本地博客&quot;</span><br><span class="line">INFO  Validating config</span><br><span class="line">INFO  Created: D:\hexo\data\blog\source\_posts\windows10-部署hexo本地博客.md</span><br><span class="line"></span><br><span class="line">wangxf@wangxf MINGW64 /d/hexo/data/blog</span><br></pre></td></tr></table></figure>

<h3><span id="3-编辑文章">3、编辑文章</span></h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wangxf@wangxf MINGW64 /d/hexo/data/blog</span><br><span class="line">$ cd source/_posts/</span><br><span class="line"></span><br><span class="line">wangxf@wangxf MINGW64 /d/hexo/data/blog/source/_posts</span><br><span class="line">$ vim windows10-部署hexo本地博客.md</span><br><span class="line"></span><br><span class="line">:wq保存退出</span><br></pre></td></tr></table></figure>

<h3><span id="4-发布blog">4、发布blog</span></h3><p>cd至家目录<br>先清理一下:    hexo clean<br>然后生成一下（对应英文hexo generate）:    hexo g<br>重启：hexo s</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wangxf@wangxf MINGW64 /d/hexo/data/blog/source/_posts</span><br><span class="line">$ cd ../../</span><br><span class="line"></span><br><span class="line">wangxf@wangxf MINGW64 /d/hexo/data/blog</span><br><span class="line">$ hexo clean</span><br><span class="line">INFO  Validating config</span><br><span class="line">INFO  Deleted database.</span><br><span class="line">INFO  Deleted public folder.</span><br><span class="line"></span><br><span class="line">wangxf@wangxf MINGW64 /d/hexo/data/blog</span><br><span class="line">$ hexo g</span><br><span class="line"></span><br><span class="line">wangxf@wangxf MINGW64 /d/hexo/data/blog</span><br><span class="line">$ hexo s</span><br></pre></td></tr></table></figure>

<h2><span id="四-更换hexo主题">四、更换hexo主题</span></h2><p>pure主题：<a href="https://blog.cofess.com/2017/11/01/hexo-blog-theme-pure-usage-description.html">https://blog.cofess.com/2017/11/01/hexo-blog-theme-pure-usage-description.html</a><br>中文说明文档：<a href="https://github.com/cofess/hexo-theme-pure/blob/master/README.cn.md">https://github.com/cofess/hexo-theme-pure/blob/master/README.cn.md</a></p>
<h3><span id="1-下载主题">1、下载主题</span></h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wangxf@wangxf MINGW64 /d/hexo/data/blog</span><br><span class="line">$ git clone https://github.com/cofess/hexo-theme-pure.git themes/pure</span><br><span class="line">Cloning into &#x27;themes/pure&#x27;...</span><br><span class="line">remote: Enumerating objects: 3392, done.</span><br><span class="line">remote: Counting objects: 100% (7/7), done.</span><br><span class="line">remote: Compressing objects: 100% (6/6), done.</span><br><span class="line">remote: Total 3392 (delta 0), reused 1 (delta 0), pack-reused 3385</span><br><span class="line">Receiving objects: 100% (3392/3392), 4.59 MiB | 34.00 KiB/s, done.</span><br><span class="line">Resolving deltas: 100% (1892/1892), done.</span><br></pre></td></tr></table></figure>

<h3><span id="2-修改配置文件hexo根目录下的_configyml文件">2、修改配置文件hexo根目录下的_config.yml文件</span></h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wangxf@wangxf MINGW64 /d/hexo/data/blog</span><br><span class="line">$ vi _config.yml</span><br><span class="line"></span><br><span class="line">theme: pure</span><br></pre></td></tr></table></figure>

<h3><span id="3-更新主题后期如果需要的话">3、更新主题（后期如果需要的话）</span></h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wangxf@wangxf MINGW64 /d/hexo/data/blog</span><br><span class="line">$ cd themes/pure/</span><br><span class="line"></span><br><span class="line">wangxf@wangxf MINGW64 /d/hexo/data/blog/themes/pure (master)</span><br><span class="line">$ git pull</span><br></pre></td></tr></table></figure>

<h3><span id="4-安装插件">4、安装插件</span></h3><p>hexo-wordcount</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install hexo-wordcount --save</span><br></pre></td></tr></table></figure>

<p>hexo-generator-json-content</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-json-content --save</span><br></pre></td></tr></table></figure>

<p>hexo-generator-feed</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-feed --save</span><br></pre></td></tr></table></figure>

<p>hexo-generator-sitemap</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-sitemap --save</span><br></pre></td></tr></table></figure>

<p>hexo-generator-baidu-sitemap</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-baidu-sitemap --save</span><br></pre></td></tr></table></figure>

<h3><span id="5-主题配置">5、主题配置</span></h3><p>编辑主题根目录下的_config.yml文件即可</p>
<p>注意事项:<br>    1、所有配置项分号后面必须添加空格</p>
<h3><span id="6-修改语言">6、修改语言</span></h3><p>​    查看该主题支持哪些语言：D:\hexo\data\blog\themes\pure\languages<br>​    修改文件:D:\hexo\data\blog_config.yml文件中language: default</p>
<h2><span id="五-hexo博客front-matter格式">五、hexo博客front-matter格式</span></h2><h3><span id="1-通用格式">1、通用格式</span></h3><p>Front-matter 是文件最上方以 — 分隔的区域，用于指定个别文件的变量，举例来说：</p>
<hr>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">title: Hello World</span><br><span class="line">date: 2013/7/13 20:46:25</span><br><span class="line">---</span><br></pre></td></tr></table></figure>

<p>以下是预先定义的参数，您可在模板中使用这些参数值并加以利用。<br>参数                        描述                                        默认值<br>layout                        布局<br>title                            标题                                        文章的文件名<br>date                            建立日期                                文件建立日期<br>updated                        更新日期                                文件更新日期<br>comments                    开启文章的评论功能                true<br>tags                            标签（不适用于分页）<br>categories                    分类（不适用于分页）<br>permalink                    覆盖文章网址</p>
<p>matery主题的相关详细格式<br>针对本站的matery主题的相关选项介绍</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: 标题</span><br><span class="line">date: 2020-02-29 16:00:00</span><br><span class="line">summary: # 文章摘要</span><br><span class="line">toc: true</span><br><span class="line">mathjax: true</span><br><span class="line">top: true</span><br><span class="line">cover: true</span><br><span class="line">abbrlink: 213245 # 自己可随意设置</span><br><span class="line">img: &#x27;https://img-blog.csdnimg.cn/20200309120551356.png&#x27; # 设置文章背景图，设置为外链图片，访问快</span><br><span class="line">tags:</span><br><span class="line">  - 算法</span><br><span class="line">  - 计算机知识</span><br><span class="line">categories:</span><br><span class="line">  - 算法</span><br><span class="line">author: # 设置文章作者</span><br><span class="line">password: # 设置密码（yml中开启相应功能）</span><br><span class="line">coverImg: # 轮播图片</span><br><span class="line">---</span><br></pre></td></tr></table></figure>

<h3><span id="2-修改创建文章时的固定模板">2、修改创建文章时的固定模板</span></h3><p>一般我们在通过以下命令创建文章时，采用的是默认的模板，我们可以对默认的模板进行修改</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo new “文章的标题”</span><br></pre></td></tr></table></figure>

<p>修改/scaffolds/post.md文件即可,修改如下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: &#123;&#123; title &#125;&#125;</span><br><span class="line">date: &#123;&#123; date &#125;&#125;</span><br><span class="line">updated: &#123;&#123; date &#125;&#125;</span><br><span class="line">categories: </span><br><span class="line">  - 待分类</span><br><span class="line">  - </span><br><span class="line">tags: </span><br><span class="line">  - 待标签</span><br><span class="line">  - </span><br><span class="line">toc: true</span><br><span class="line">---</span><br></pre></td></tr></table></figure>

<h2><span id="五-编辑界面theme-by-cofess-base-on-pure-问题">五、编辑界面Theme by cofess base on pure. 问题</span></h2><p>按F12可以调整这部分编码但是重新生成代码后会覆盖</p>
<h2><span id="六-blog中插入图片">六、blog中插入图片</span></h2><h3><span id="1-安装插件">1、安装插件</span></h3><p>直接安装hexo-asset-image插件，会导致路径引用问题，使图片无法显示，所以需要安装修改好的包</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install https://github.com/CodeFalling/hexo-asset-image --save</span><br></pre></td></tr></table></figure>

<h3><span id="2-配置md">2、配置md</span></h3><p>文件-偏好设置-图像<br><img src="/2021/05/15/windows10-%E9%83%A8%E7%BD%B2hexo/image-20210515124508335.png" alt="image-20210515124508335"></p>
<h3><span id="3-修改hexo根目录下_configyml配置文件flase修改为true">3、修改hexo根目录下_config.yml配置文件flase修改为true</span></h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">post_asset_folder: true</span><br></pre></td></tr></table></figure>



<h2><span id="六-部署hexo-admin插件管理hexo没什么用">六、部署hexo-admin插件管理hexo(没什么用)</span></h2><h3><span id="1-安装部署">1、安装部署</span></h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install hexo-admin --save</span><br></pre></td></tr></table></figure>

<h3><span id="2-启动hexo">2、启动hexo</span></h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo s </span><br></pre></td></tr></table></figure>

<h3><span id="2-登录">2、登录</span></h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://localhost:4000/admin</span><br></pre></td></tr></table></figure>

<h2><span id="七-hexo后台启动">七、hexo后台启动</span></h2><h3><span id="1-配置脚本并配置开机自启动需要开启cmd窗口">1、配置脚本并配置开机自启动（需要开启cmd窗口）</span></h3><h4><span id="1-配置bat脚本如下">（1）、配置bat脚本如下</span></h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">D:</span><br><span class="line">cd D:\hexo\data\blog</span><br><span class="line">hexo s -p 666</span><br></pre></td></tr></table></figure>

<h4><span id="2-vbs脚本可以配置开机自启动">（2）、vbs脚本可以配置开机自启动</span></h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">set ws=WScript.CreateObject(&quot;WScript.Shell&quot;)</span><br><span class="line">ws.Run &quot;E:\\WorkSpace\\webProject\\Hexo-blog\\hexo-server.bat /start&quot;,0</span><br></pre></td></tr></table></figure>

<h3><span id="2-使用pm2会弹出cmd窗口">2、使用pm2（会弹出cmd窗口）</span></h3><h4><span id="1-安装pm2">（1）、安装pm2</span></h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install -g pm2</span><br></pre></td></tr></table></figure>

<h4><span id="2-创建执行脚本pm2js">（2）、创建执行脚本pm2.js</span></h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//pm2.js</span><br><span class="line">const &#123; exec &#125; = require(&#x27;child_process&#x27;)</span><br><span class="line">exec(&#x27;hexo server -p 666&#x27;,(error, stdout, stderr) =&gt; &#123;</span><br><span class="line">  if(error)&#123;</span><br><span class="line">    console.log(`exec error: $&#123;error&#125;`)</span><br><span class="line">    return</span><br><span class="line">  &#125;</span><br><span class="line">  console.log(`stdout: $&#123;stdout&#125;`);</span><br><span class="line">  console.log(`stderr: $&#123;stderr&#125;`);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<h4><span id="3-运行脚本">（3）、运行脚本</span></h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pm2 start pm2.js</span><br><span class="line">pm2 stop pm2.js</span><br><span class="line">pm2 status pm2.js</span><br><span class="line"></span><br><span class="line">pm2 delete pm2</span><br><span class="line"></span><br><span class="line">wangxf@wangxf MINGW64 /d/hexo/data/blog</span><br><span class="line">$ pm2 start pm2.js</span><br><span class="line">[PM2] Starting D:\hexo\data\blog\pm2.js in fork_mode (1 instance)</span><br><span class="line">[PM2] Done.</span><br><span class="line">┌─────┬────────┬─────────────┬─────────┬─────────┬──────────┬────────┬──────┬───────────┬──────────┬──────────┬──────────┬──────────┐</span><br><span class="line">│ id  │ name   │ namespace   │ version │ mode    │ pid      │ uptime │ ↺    │ status    │ cpu      │ mem      │ user     │ watching │</span><br><span class="line">├─────┼────────┼─────────────┼─────────┼─────────┼──────────┼────────┼──────┼───────────┼──────────┼──────────┼──────────┼──────────┤</span><br><span class="line">│ 0   │ pm2    │ default     │ 0.0.0   │ fork    │ 20808    │ 0s     │ 0    │ online    │ 0%       │ 29.7mb   │ wangxf   │ disabled │</span><br><span class="line">└─────┴────────┴─────────────┴─────────┴─────────┴──────────┴────────┴──────┴───────────┴──────────┴──────────┴──────────┴──────────┘</span><br><span class="line"></span><br><span class="line">wangxf@wangxf MINGW64 /d/hexo/data/blog</span><br><span class="line">$ pm2 list</span><br><span class="line">┌─────┬────────┬─────────────┬─────────┬─────────┬──────────┬────────┬──────┬───────────┬──────────┬──────────┬──────────┬──────────┐</span><br><span class="line">│ id  │ name   │ namespace   │ version │ mode    │ pid      │ uptime │ ↺    │ status    │ cpu      │ mem      │ user     │ watching │</span><br><span class="line">├─────┼────────┼─────────────┼─────────┼─────────┼──────────┼────────┼──────┼───────────┼──────────┼──────────┼──────────┼──────────┤</span><br><span class="line">│ 0   │ pm2    │ default     │ 0.0.0   │ fork    │ 20808    │ 16s    │ 0    │ online    │ 0%       │ 26.2mb   │ wangxf   │ disabled │</span><br><span class="line">└─────┴────────┴─────────────┴─────────┴─────────┴──────────┴────────┴──────┴───────────┴──────────┴──────────┴──────────┴──────────┘</span><br><span class="line"></span><br><span class="line">wangxf@wangxf MINGW64 /d/hexo/data/blog</span><br><span class="line">$ pm2 stop all</span><br><span class="line">[PM2] Applying action stopProcessId on app [all](ids: [ 0 ])</span><br><span class="line">[PM2] [pm2](0) ✓</span><br><span class="line">┌─────┬────────┬─────────────┬─────────┬─────────┬──────────┬────────┬──────┬───────────┬──────────┬──────────┬──────────┬──────────┐</span><br><span class="line">│ id  │ name   │ namespace   │ version │ mode    │ pid      │ uptime │ ↺    │ status    │ cpu      │ mem      │ user     │ watching │</span><br><span class="line">├─────┼────────┼─────────────┼─────────┼─────────┼──────────┼────────┼──────┼───────────┼──────────┼──────────┼──────────┼──────────┤</span><br><span class="line">│ 0   │ pm2    │ default     │ 0.0.0   │ fork    │ 0        │ 0      │ 0    │ stopped   │ 0%       │ 0b       │ wangxf   │ disabled │</span><br><span class="line">└─────┴────────┴─────────────┴─────────┴─────────┴──────────┴────────┴──────┴───────────┴──────────┴──────────┴──────────┴──────────┘</span><br><span class="line"></span><br><span class="line">wangxf@wangxf MINGW64 /d/hexo/data/blog</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3><span id="3-直接后台启动不能关闭git-bash窗口">3、直接后台启动（不能关闭git bash窗口）</span></h3><h4><span id="1-直接后台启动">(1)、直接后台启动</span></h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo s -p 666 &amp;</span><br></pre></td></tr></table></figure>

<h3><span id="4-使用forever">4、使用forever</span></h3><h4><span id="1-安装forever">(1)、安装forever</span></h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install -g forever</span><br></pre></td></tr></table></figure>

<h4><span id="2-hexo家目录下常见js文件">(2)、hexo家目录下常见js文件</span></h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">require(&#x27;hexo&#x27;).init(&#123;command: &#x27;server -p 666&#x27;&#125;);</span><br></pre></td></tr></table></figure>

<h4><span id="3-启动forever">(3)、启动forever</span></h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wangxf@wangxf MINGW64 /d/hexo/data/blog</span><br><span class="line">$ forever start forever-hexo.js</span><br><span class="line">warn:    --minUptime not set. Defaulting to: 1000ms</span><br><span class="line">warn:    --spinSleepTime not set. Your script will exit if it does not stay up for at least 1000ms</span><br><span class="line">info:    Forever processing file: forever-hexo.js</span><br><span class="line">(node:932) Warning: Accessing non-existent property &#x27;padLevels&#x27; of module exports inside circular dependency</span><br><span class="line">(Use `node --trace-warnings ...` to show where the warning was created)</span><br><span class="line">(node:932) Warning: Accessing non-existent property &#x27;padLevels&#x27; of module exports inside circular dependency</span><br><span class="line"></span><br><span class="line">wangxf@wangxf MINGW64 /d/hexo/data/blog</span><br><span class="line">$ forever list</span><br><span class="line">(node:12892) Warning: Accessing non-existent property &#x27;padLevels&#x27; of module exports inside circular dependency</span><br><span class="line">(Use `node --trace-warnings ...` to show where the warning was created)</span><br><span class="line">(node:12892) Warning: Accessing non-existent property &#x27;padLevels&#x27; of module exports inside circular dependency</span><br><span class="line">info:    Forever processes running</span><br><span class="line">data:        uid  command                   script                            forever pid   id logfile                           uptime</span><br><span class="line">data:    [0] WsBQ &quot;D:\hexo\nodejs\node.exe&quot; D:\hexo\data\blog\forever-hexo.js 15644   21624    C:\Users\wangxf\.forever\WsBQ.log 0:0:0:0.091</span><br><span class="line"></span><br><span class="line">wangxf@wangxf MINGW64 /d/hexo/data/blog</span><br><span class="line">$ forever stop forever-hexo.js</span><br><span class="line">(node:16672) Warning: Accessing non-existent property &#x27;padLevels&#x27; of module exports inside circular dependency</span><br><span class="line">(Use `node --trace-warnings ...` to show where the warning was created)</span><br><span class="line">(node:16672) Warning: Accessing non-existent property &#x27;padLevels&#x27; of module exports inside circular dependency</span><br><span class="line">error:   Forever cannot find process with id: forever-hexo.js</span><br><span class="line"></span><br><span class="line">wangxf@wangxf MINGW64 /d/hexo/data/blog</span><br><span class="line">$ forever list</span><br><span class="line">(node:7584) Warning: Accessing non-existent property &#x27;padLevels&#x27; of module exports inside circular dependency</span><br><span class="line">(Use `node --trace-warnings ...` to show where the warning was created)</span><br><span class="line">(node:7584) Warning: Accessing non-existent property &#x27;padLevels&#x27; of module exports inside circular dependency</span><br><span class="line">info:    No forever processes running</span><br><span class="line"></span><br><span class="line">wangxf@wangxf MINGW64 /d/hexo/data/blog</span><br><span class="line">$</span><br></pre></td></tr></table></figure>

<h4><span id="4-forever运行目录为">(4)、forever运行目录为</span></h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">C:\Users\wangxf\.forever</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
</search>
